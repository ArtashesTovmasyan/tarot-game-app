document.addEventListener("DOMContentLoaded", () => {
    console.log("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö...");
    loadSpreads();
    loadZodiacSigns();
    loadHistory();
    loadCards();

    document.getElementById("zodiac-sign").addEventListener("change", (e) => {
        const sign = e.target.value;
        if (sign) {
            console.log(`–ó–∞–≥—Ä—É–∂–∞—é –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –∑–Ω–∞–∫–∞: ${sign}`);
            fetch(`/api/horoscope/${sign}`)
                .then(response => response.json())
                .then(data => {
                    console.log("–ì–æ—Ä–æ—Å–∫–æ–ø –ø–æ–ª—É—á–µ–Ω:", data);
                    document.getElementById("horoscope-result").innerHTML = `<p>${data.horoscope}</p>`;
                })
                .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞:", error));
        } else {
            document.getElementById("horoscope-result").innerHTML = "";
        }
    });
});

function showTab(tabId) {
    console.log(`–ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabId}`);
    document.querySelectorAll(".tab-content").forEach(tab => tab.classList.remove("active"));
    document.querySelectorAll(".tab").forEach(tab => tab.classList.remove("active"));
    document.getElementById(tabId).classList.add("active");
    document.querySelector(`.tab[onclick="showTab('${tabId}')"]`).classList.add("active");

    if (tabId === "spreads") loadSpreads();
    if (tabId === "history") loadHistory();
    if (tabId === "horoscope") loadZodiacSigns();
    if (tabId === "cards") loadCards();
}

function loadSpreads() {
    console.log("–ó–∞–≥—Ä—É–∂–∞—é —Ä–∞—Å–∫–ª–∞–¥—ã...");
    fetch("/api/spreads")
        .then(response => {
            console.log("–û—Ç–≤–µ—Ç –æ—Ç /api/spreads:", response);
            return response.json();
        })
        .then(spreads => {
            console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã:", spreads);
            const spreadsList = document.getElementById("spreads-list");
            spreadsList.innerHTML = "";
            spreads.forEach(spread => {
                const div = document.createElement("div");
                div.className = "spread-item";
                div.innerHTML = `<div class="icon">${spread.icon}</div>${spread.name}`;
                div.onclick = () => getSpread(spread.name);
                spreadsList.appendChild(div);
            });
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–∫–ª–∞–¥–æ–≤:", error));
}

function loadZodiacSigns() {
    console.log("–ó–∞–≥—Ä—É–∂–∞—é –∑–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞...");
    fetch("/api/zodiac_signs")
        .then(response => {
            console.log("–û—Ç–≤–µ—Ç –æ—Ç /api/zodiac_signs:", response);
            return response.json();
        })
        .then(signs => {
            console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–Ω–∞–∫–∏ –∑–æ–¥–∏–∞–∫–∞:", signs);
            const select = document.getElementById("zodiac-sign");
            select.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫</option>';
            signs.forEach(sign => {
                const option = document.createElement("option");
                option.value = sign;
                option.textContent = sign;
                select.appendChild(option);
            });
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–Ω–∞–∫–æ–≤ –∑–æ–¥–∏–∞–∫–∞:", error));
}

function loadHistory() {
    const userId = "123";
    console.log(`–ó–∞–≥—Ä—É–∂–∞—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è user_id: ${userId}...`);
    fetch(`/api/history/${userId}`)
        .then(response => {
            console.log("–û—Ç–≤–µ—Ç –æ—Ç /api/history:", response);
            return response.json();
        })
        .then(history => {
            console.log("–ü–æ–ª—É—á–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è:", history);
            const historyList = document.getElementById("history-list");
            historyList.innerHTML = "";
            if (history.length === 0) {
                historyList.innerHTML = "<p>–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.</p>";
                return;
            }
            history.forEach(entry => {
                const div = document.createElement("div");
                div.className = "history-item";
                div.innerHTML = `<strong>${entry.date}</strong>: ${entry.spread_name}<br>` +
                    entry.cards.map(card => `${card.name} (${card.position}): ${card.meaning}`).join("<br>");
                historyList.appendChild(div);
            });
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:", error));
}

function loadCards() {
    console.log("–ó–∞–≥—Ä—É–∂–∞—é –∫–∞—Ä—Ç—ã...");
    fetch("/api/cards")
        .then(response => {
            console.log("–û—Ç–≤–µ—Ç –æ—Ç /api/cards:", response);
            return response.json();
        })
        .then(cards => {
            console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã:", cards);
            const cardsList = document.getElementById("cards-list");
            cardsList.innerHTML = "";
            cards.forEach(card => {
                const div = document.createElement("div");
                div.className = "card-item";
                div.textContent = card;
                div.onclick = () => showCardDetails(card); // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
                cardsList.appendChild(div);
            });
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ä—Ç:", error));
}

function showCardDetails(cardName) {
    console.log(`–ó–∞–ø—Ä–∞—à–∏–≤–∞—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ä—Ç—ã: ${cardName}`);
    fetch(`/api/card/${encodeURIComponent(cardName)}`)
        .then(response => {
            console.log("–û—Ç–≤–µ—Ç –æ—Ç /api/card:", response);
            return response.json();
        })
        .then(card => {
            console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã:", card);
            if (card.error) {
                console.error("–ö–∞—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:", card.error);
                return;
            }
            const cardsList = document.getElementById("cards-list");
            cardsList.innerHTML = `<h3>${card.name}</h3>` +
                `<div class="card-details">` +
                `<strong>–ü—Ä—è–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ‚¨ÜÔ∏è:</strong><br>${card.upright}<br><br>` +
                `<strong>–ü–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ üîÉ:</strong><br>${card.reversed}` +
                `</div>`;
            const backButton = document.createElement("button");
            backButton.textContent = "–ù–∞–∑–∞–¥";
            backButton.onclick = loadCards;
            cardsList.appendChild(backButton);
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã:", error));
}

function getSpread(spreadName) {
    const userId = "123";
    console.log(`–ü–æ–ª—É—á–∞—é —Ä–∞—Å–∫–ª–∞–¥: ${spreadName} –¥–ª—è user_id: ${userId}...`);
    fetch(`/api/spread/${spreadName}`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ user_id: userId })
    })
        .then(response => {
            console.log("–û—Ç–≤–µ—Ç –æ—Ç /api/spread:", response);
            return response.json();
        })
        .then(cards => {
            console.log("–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞:", cards);
            const spreadsList = document.getElementById("spreads-list");
            spreadsList.innerHTML = `<h3>${spreadName}</h3>`;
            cards.forEach(card => {
                const div = document.createElement("div");
                div.className = "spread-result";
                div.innerHTML = `<strong>${card.name}</strong> (${card.position})<br>${card.meaning}`;
                spreadsList.appendChild(div);
            });
            const backButton = document.createElement("button");
            backButton.textContent = "–ù–∞–∑–∞–¥";
            backButton.onclick = loadSpreads;
            spreadsList.appendChild(backButton);
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–∫–ª–∞–¥–∞:", error));
}